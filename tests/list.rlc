open list.List in
open dp.DP     in

let myl : { l :: list real | 1 = 1 } = Cons 1.0 Nil in

let rec l_dup (l : list int)
              {struct l}
      : list (int * int) =
  match l with [list (int*int)]
  | Nil       -> Nil
  | Cons x xs -> Cons (x,x) (l_dup xs)

in l_dup
